#! /usr/bin/env bash

# Compare the working copy to revision 32.
# hg vdiff group_vars/vagrant.yml --rev 32

echo "0 = _$0_"
echo "1 = _$1_"
echo "2 = _$2_"

mydir=$(mktemp -d "${TMPDIR:-/tmp/}$(basename "$0").XXXXXXXXXXXX")
if [ ! -d "$mydir" ]; then
  # unable to create the temp dir.
  exit 1
fi
trap "rm -rf $mydir" EXIT

repo_copy="$mydir/repo_copy"
working_copy="$mydir/working_copy"
# TODO: Use "pyenv whence ansible-vault" to find the version containing ansible.
$PYENV_ROOT/versions/amplify-codes/bin/ansible-vault --vault-password-file=~/.ansible_vault decrypt "$1" --output="$repo_copy" > /dev/null
$PYENV_ROOT/versions/amplify-codes/bin/ansible-vault --vault-password-file=~/.ansible_vault decrypt "$2" --output="$working_copy" > /dev/null

echo "vvvv diff -C 3 \"$repo_copy\" \"$working_copy\""
diff -C 3 "$repo_copy" "$working_copy"
echo "^^^^ diff end"

# Issue: Finding the ansible-vault environment.  The hg app runs in its own environment so the ansible-vault app is not likely accessible without abs path.
# Could (don't really like any of these):
# * require people to modify this script with the path.
# * Use an env var to point to the python environment and add that to .profile.
# * Use pyenv which to find it.
#     atorres@Adams-MacBook-Air: pyenv which ansible-vault
#     pyenv: ansible-vault: command not found
# 
#     The `ansible-vault' command exists in these Python versions:
#       2.7.11/envs/amplify-launch27
#       3.4.2/envs/amplify-launch-codes
#       amplify-launch-codes
#       amplify-launch27
# 
# 
#     atorres@Adams-MacBook-Air: pyenv which ansible-vault
#       /opt/pyenv/versions/amplify-launch27/bin/ansible-vault

